@using EmmasEngines.Models
@model EmmasEngines.ViewModels.HourlyReportDetailsVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Hourly Report Details";
}
<style>
    th {
        color: black;
    }

    h3 {
        font-size: 20px;
        font-weight: bold;
    }
</style>

<link rel="stylesheet" href="~/css/pages/invoiceDetails.css" asp-append-version="true" />


<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<div class="container">
    <div class="row">
        <div class="col-md-12 text-center">
            <img id="logo" src="~/imgs/Logo_ESE.png" alt="Emma's Engines Logo" />
            <h1>Emma's Small Engines - Hourly Report</h1><br />
            <hr />
            <p>Start Date: @Model.Start.ToShortDateString() End Date: @Model.End.ToShortDateString()</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h3>Employee Login Summary</h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Date</th>
                        <th>Billable Hours</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var emp in Model.Employees.OrderBy(e => e.ID))
                    {
                        List<EmployeeLogin> loginsSummary = Model.Employees.Where(e => e.ID == emp.ID).SelectMany(e => e.EmployeeLogins).ToList();
                        string dates = loginsSummary.Where(l => l.SignIn >= Model.Start && l.SignIn <= Model.End).Select(l => l.SignIn.ToShortDateString()).Distinct().Aggregate("", (current, s) => current + (s + "\n"));
                        var hours = (loginsSummary.Where(l => l.SignIn >= Model.Start && l.SignIn <= Model.End).Select(l => (l.SignOut - l.SignIn).TotalHours)).Sum();

                        <tr>
                            <td>@emp.ID</td>
                            <td>@emp.FullName</td>
                            <td>@dates</td>
                            <td>@hours.ToString("F")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h3>Employee Logins</h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Date</th>
                        <th>Billable Hours</th>
                        <th>Sign In</th>
                        <th>Sign Out</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var emp in Model.Employees.OrderBy(e => e.ID))
                    {

                        //List<EmployeeLogin> logins = Model.Employees.Where(e => e.ID == emp.ID).SelectMany(e => e.EmployeeLogins).Where(e => e.SignIn >= Model.Start && e.SignOut <= Model.End).ToList();
                        List<EmployeeLogin> emplogins = Model.Employees.Where(e => e.ID == emp.ID).SelectMany(e => e.EmployeeLogins).ToList();
                        List<EmployeeLogin> logins = emplogins.Where(e => e.SignIn >= Model.Start && e.SignIn <= Model.End).OrderBy(l => l.SignIn).ToList();

                        foreach(var login in logins){
                            double hours = (login.SignOut - login.SignIn).TotalHours;
                            <tr>
                                <td>@emp.ID</td>
                                <td>@emp.FullName</td>
                                <td>@login.SignIn.ToShortDateString()</td>
                                <td>@hours.ToString("F")</td>
                                <td>@login.SignIn.ToShortTimeString()</td>
                                <td>@login.SignOut.ToShortTimeString()</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 text-center">
            @*Buttons for: Print PDF, Return to Reports Index, Delete*@
            <div class="btn-group">
                <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("GenerateHourlyReportPDF", "Reports", new { id = Model.HourlyReport.ID })'">
                    <i data-feather="printer"></i> Print PDF
                </button>
                <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Reports")'">
                    <i class="fa corner-down-left"></i> Return to Reports
                </button>
                <form method="post" action="/Reports/Delete/@Model.HourlyReport.ID" onsubmit="return confirm('Are you sure you want to delete this report?');">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fa fa-trash"></i> Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

