@model IEnumerable<EmmasEngines.Models.Inventory>
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json;
@using EmmasEngines.Utilities;
@inject IHttpContextAccessor HttpContextAccessor;

@{
	ViewData["Title"] = "Index";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
<script src="https://kit.fontawesome.com/f8c88d6b79.js" crossorigin="anonymous"></script>
<link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
<main>
	<section id="pageName">
		<h1>POS</h1>
	</section>
	<script src="/lib/jquery/dist/jquery.min.js"></script>

	<section id="customerSearch">
		<label id="searchHeader" class="control-label">Search Customer: </label>
		@*Customer Details*@
		<form id="search-form" action="@Url.Action("SearchCustomer")" method="post">
			<input type="text" name="SearchString" placeholder="Search by name or phone. Eg. 'John' or '1234'" />
			<button type="submit" name="actionButton" value="FilterCustomer"><i class="fa fa-search" aria-hidden="true"></i> - Search</button>

		</form>
		<div id="customer-details">
			@if (TempData.ContainsKey("CustomerDetails"))
			{
				//Html.RenderPartial("_CustomerDetails", TempData["CustomerDetails"]);
				await Html.PartialAsync("_CustomerDetails", TempData["CustomerDetails"]);
			}
		</div>
		@*When pressed, Modal box of Customer Name, Phone, Address, Postal*@
		<div class="btn_crud">
			<button type="submit" name="actionButton" value="customerDetails" tabindex="190" class="" onclick="" aria-label="button to show customer details">
				<i class="fa fa-info" aria-hidden="true"></i> - Customer Details
			</button>
		</div>
		@*When pressed, Modal box to add customer. Set cart to this customer.*@
		<div class="btn_crud">
			<button type="submit" name="actionButton" value="addCustomer" tabindex="190" class="" onclick="" aria-label="button to add customer">
				<i class="fa fa-plus-square" aria-hidden="true"></i> - Add Customer
			</button>
		</div>

	</section>

	<form asp-action="Index" method="get">



		<div class="form-horizontal">



			@*Search Inventory by name (+ buttons to submit, clear)*@
			<section id="inventorySearch" style="">
				<h2><label id="searchHeader" class="control-label">Search Inventory: </label></h2>
				<input class="form-control" id="SearchString" name="SearchString" type="text" placeholder="Enter UPC Eg. ###-####-# or Inventory Name Eg. Mower">
				<div class="btn">
					<div class="btn_crud">
						<button type="submit" name="actionButton" value="Filter" tabindex="190" class="btn_crud_edit" onclick="" aria-label="button for edit items">
							<i class="fa fa-filter" aria-hidden="true"></i>
						</button>
						<span class="btn_tooltip">Filter</span>
					</div>
					<div class="btn_crud">
						<button type="submit" name="actionButton" value="FilterInventory" tabindex="190" class="btn_crud_edit" asp-action="Index" aria-label="button for edit items">
							<i class="fa fa-eraser" aria-hidden="true"></i>
						</button>
						<span class="btn_tooltip">Clear</span>
					</div>             
				</div>
			</section>
		</div>

		<div id="inventoryMain">
			<div class=" divider2_desc_btn">
				<div class="description">

					<table class="table table-striped" id="inventoryTable">
						<thead>
							<tr class="bg-info">
								<th>
									<input type="submit" name="actionButton" value="UPC" class="tableHeaders" />
								</th>
								<th>
									<input type="submit" name="actionButton" value="Name" class="tableHeaders" />
								</th>
								<th>
									<input type="submit" name="actionButton" value="Size" class="no-click" />
								</th>
								<th>
									<input type="submit" name="actionButton" value="Quantity" class="no-click" />
								</th>
								<th>
									<input type="submit" name="actionButton" value="Cost (AVG)" class="tableHeaders" />
								</th>
								<th>
									<input type="submit" name="actionButton" value="Price (Retail)" class="tableHeaders" />
								</th>
								<th>
									<input type="submit" disabled="disabled" value="Current" class="tableHeaders" />
								</th>
								<th>
									<input type="submit" disabled="disabled" value="Stock" class="tableHeaders" />
								</th>
								<th></th>
							</tr>
						</thead>
						<tbody id="inventoryData">
							@foreach (var item in Model)
							{
								<tr class="table-hover">
									<td>
										@Html.DisplayFor(modelItem => item.UPC)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.Name)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.Size)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.Quantity)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.AdjustedPrice)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.MarkupPrice)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.Current)
									</td>
									<td>
										@Html.DisplayFor(modelItem => item.TotalStock)
									</td>
									<td>
										<a href="@Url.Action("Buy", "POS", new {UPC = item.UPC})">(+) Add to Cart</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="cart">
			@*Create a new table with headers for "Name", "Price", "Quantity".*@
			@*Table starts empty. Items are added by POSController.AddToCart, returning a single JSON inventory object*@
			@*The table is then populated with the JSON object*@
			@*The table is then updated every time a new item is added to the cart*@
			<table class="table table-striped" id="invoiceTable">
				<thead>
					<tr class="bg-info">
						<th>
							<input type="submit" disabled="disabled" value="Name" class="tableHeaders" />
						</th>
						<th>
							<input type="submit" disabled="disabled" value="Price" class="tableHeaders" />
						</th>
						<th>
							<input type="submit" disabled="disabled" value="Quantity" class="tableHeaders" />
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody id="cartData">
					@*add a new item (name, price, quantity) by a given UPC code*@
					@*the item is added to the cart, and the cart is updated*@
					@*the cart is then displayed in the table*@
					@*Use the "Buy(string UPC) function / HttpContext.Session["cart"] to update the table *@
					
				@{
						var cart = (List<Inventory>)HttpContextAccessor.HttpContext.Session.GetObjectFromJson<List<Inventory>>("cart");
						if(cart != null)
						{		
							foreach (Inventory item in cart)
							{
									<tr class="table-hover">
										<td>
											@Html.DisplayFor(modelItem => item.Name)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.AdjustedPrice)
										</td>
										<td>
											@Html.DisplayFor(modelItem => item.Quantity)
										</td>
										<td>
											<a href="@Url.Action("RemoveFromCart", "POS", new {UPC = item.UPC})">(-) Remove From Cart</a>
										</td>
									</tr>
							}
						}
					}
				</tbody>
			</table>
			<div id="cartSummaryData">
				@*Subtotal, Tax, Total, Paid, Change*@
				@*Using Summary, returning json result of these properties, display in an unordered list*@
				@*Use the "Summary" function to update the summary data *@
				@*Use the "ClearCart" function to clear the cart and the summary data *@
				@*Use the "Pay" function to display the payment data *@
				@*Use the "Pay" function to clear the cart and the summary data *@
				<ul class="list-group list-group-flush">
					@{
						double total = 0;
						double tax = 0;
						double subtotal = 0;
						double paid = 0;
						double change = 0;

						if(cart != null)
						{
							foreach (Inventory item in cart)
							{
								subtotal += item.AdjustedPrice;
								tax = subtotal * 0.13;
								total = subtotal + tax;
							}
						}
							<li>Subtotal: @subtotal.ToString("C")</li>
							<li>Tax: @tax.ToString("C")</li>
							<li>Total: @total.ToString("C")</li>
							<li>Paid: @paid.ToString("C")</li>
							<li>Change: @change.ToString("C")</li>	
					}
				</ul>

				
			</div>
			<div id="cartPayment">

			</div>
		</div>

		<partial name="_PagingNavBar" />
	</form>
</main>



<script>
	console.log("Javascript loaded...")
	$(function () {
		$('form').submit(function (event) {
			var form = $(this);
			var url = form.attr('action');
			var data = form.serialize();
			var filterButton = form.find('button[name="actionButton"]');

			if (filterButton.length && filterButton.val() === "FilterCustomer") {
				event.preventDefault();
				$.ajax({
					url: url,
					type: 'POST',
					data: data,
					success: function (result) {
						$('#customer-details').html(result);
						sessionStorage.setItem('customerDetails', result);
					}
				});
			}
		});
	});

	var customerDetails = sessionStorage.getItem('customerDetails');
	if (customerDetails !== null) {
		$('#customer-details').html(customerDetails);
	}

</script>






