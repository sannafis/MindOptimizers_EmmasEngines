@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav login-sect">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @{string userEmail = User.Identity?.Name;}                      @*REMOVE INSIDE <a> to remove access to the user to modify their account*@
            <a class="nav-link text-light" @*asp-area="Identity" asp-page="/Account/Manage/Index"*@ title="Manage">Hello, <span>@userEmail.Substring(0, userEmail.LastIndexOf("@"))</span>!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link text-light"><i class="fa-solid fa-right-from-bracket"></i> Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class=" text-light" asp-area="Identity" asp-page="/Account/Login"><i class="fa-solid fa-right-from-bracket"></i>Login</a>
    </li>
}
</ul>
