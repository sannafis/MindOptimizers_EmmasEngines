// <auto-generated />
using System;
using EmmasEngines.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmmasEngines.Data.EmmasEnginesMigrations
{
    [DbContext(typeof(EmmasEnginesContext))]
    [Migration("20230205191239_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.13");

            modelBuilder.Entity("EmmasEngines.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("EmmasEngines.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("CityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EmmasEngines.Models.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Current")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UPC")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("UPC")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("EmmasEngines.Models.Price", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryUPC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PurchasedCost")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("PurchasedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("InventoryUPC");

                    b.HasIndex("SupplierID");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("EmmasEngines.Models.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("EmmasEngines.Models.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("CityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("EmmasEngines.Models.City", b =>
                {
                    b.HasOne("EmmasEngines.Models.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EmmasEngines.Models.Customer", b =>
                {
                    b.HasOne("EmmasEngines.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmmasEngines.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");

                    b.Navigation("City");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EmmasEngines.Models.Price", b =>
                {
                    b.HasOne("EmmasEngines.Models.Inventory", "Inventory")
                        .WithMany("Prices")
                        .HasForeignKey("InventoryUPC")
                        .HasPrincipalKey("UPC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmmasEngines.Models.Supplier", "Supplier")
                        .WithMany("Prices")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("EmmasEngines.Models.Supplier", b =>
                {
                    b.HasOne("EmmasEngines.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmmasEngines.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");

                    b.Navigation("City");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EmmasEngines.Models.Inventory", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("EmmasEngines.Models.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("EmmasEngines.Models.Supplier", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
